import xml.dom.minidom
import re
import argparse


def behead(xml_file):
    doc = ""
    try:
        doc = xml.dom.minidom.parse(xml_file)
    except:
        print(f"'{xml_file}' not found. Please make sure your XML file is in the same directory")
        return
    entry = doc.getElementsByTagName("apps:property")
    emails = ""
    blacklist = []
    # For each <entry>, in the attribute 'from', get the 'value'.
    # Get the 'from' email addresses
    for e in entry:
        # Get the 'from' emails
        if e.getAttribute('name') == 'from':
            # Extract the 'value' attribute in the 'apps:property' tag in every <entry>
            val = e.getAttribute('value')
            # Create a list of the blacklist emails.
            emails += val

    blacklist = emails.split(" OR ")

    domains = []
    occ = []

    for e in blacklist:
        if e.rfind("@") >= 0:
            e = e[e.rfind("@")+1:]
            for match in re.finditer(r"\.", e):
                occ.append(match.span()[0])
            if len(occ) >= 2:
                domains.append(e[occ[len(occ)-2]+1:])
            else:
                domains.append(e[e.rfind("@")+1:])
            occ = []

    print("Please review the domains below to avoid filtering non-spam emails!!")
    print("=================COPY AND PASTE YOUR FILTER BELOW=================")
    filter = str(set(domains)).replace("\'", "").replace(
        ",", " OR").replace("{", "").replace("}", "").strip()
    print(filter)
    print("=================COPY AND PASTE YOUR FILTER ABOVE=================")
    print("Please review the domains above to avoid filtering non-spam emails!!")


if __name__ == "__main__":
    my_parser = argparse.ArgumentParser(
        description="Generate Gmail filters from XML file")
    my_parser.add_argument('-f', '--file', metavar='file',
                           type=str, help="xml file generated by gmail")
    args = my_parser.parse_args()
    behead(args.file)
